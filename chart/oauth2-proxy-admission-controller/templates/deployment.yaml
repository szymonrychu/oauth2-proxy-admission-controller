apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oauth2-proxy-admission-controller.fullname" . }}
  labels:
    {{- include "oauth2-proxy-admission-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oauth2-proxy-admission-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oauth2-proxy-admission-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: controller-manager
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oauth2-proxy-admission-controller.serviceAccountName" . }}
      automountServiceAccountToken: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: OAUTH2_PROXY_ADMISSION_SECRET_NAME 
              valueFrom:
                secretKeyRef:
                  name: {{ include "oauth2-proxy-admission-controller.fullname" . }}
                  key: default-secret-name
            - name: OAUTH2_PROXY_ADMISSION_SECRET_NAMESPACE 
              valueFrom:
                secretKeyRef:
                  name: {{ include "oauth2-proxy-admission-controller.fullname" . }}
                  key: default-secret-namespace
          args:
            - --host
            - "0.0.0.0"
            - --port
            - "443"
            - --ssl-certfile
            - /certs/tls.crt
            - --ssl-keyfile
            - /certs/tls.key
            - app:app
          volumeMounts:
            - readOnly: true
              mountPath: /certs
              name: webhook-certs
          ports:
            - name: webhook-server
              containerPort: 443
              protocol: TCP
          livenessProbe:
            tcpSocket:
              path: /healthz/live
              port: webhook-server
              scheme: HTTPS
          readinessProbe:
            tcpSocket:
              path: /healthz/ready
              port: webhook-server
              scheme: HTTPS
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: webhook-certs
          secret:
            secretName: {{ default (printf "%s-controller-manager-service-cert" (include "oauth2-proxy-admission-controller.fullname" .)) .Values.admissionWebhooks.secretName }}